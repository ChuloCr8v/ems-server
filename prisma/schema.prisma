generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String      @id @default(uuid()) @db.Uuid
  email        String      @unique
  firstName    String
  lastName     String
  phone        String
  gender       String
  active       Boolean     @default(true)
  role         Role        @default(USER)
  employment   Employment?
  invite       Invite?     @relation(fields: [inviteId], references: [id])
  inviteId     String?     @unique @db.Uuid
  department   Department? @relation(fields: [departmentId], references: [id])
  departmentId String?     @db.Uuid
  level        Level?      @relation(fields: [levelId], references: [id])
  levelId      String?     @db.Uuid
}

model Employment {
  id             String  @id @default(uuid()) @db.Uuid
  userId         String  @unique @db.Uuid
  role           String
  department     String
  jobType        String
  contractLetter String?
  nda            String?
  guarantorForm  String?
  otherDocs      String?

  user User @relation(fields: [userId], references: [id])
}

model Invite {
  id         String       @id @default(uuid()) @db.Uuid
  email      String
  token      String       @unique
  status     InviteStatus @default(PENDING)
  createdAt  DateTime     @default(now())
  expiresAt  DateTime
  acceptedAt DateTime?

  user   User?
  userId String? @unique
}

model Department {
  id        String   @id @default(uuid()) @db.Uuid
  name      String
  users     User[]
  createdAt DateTime @default(now())
  updatedAT DateTime @updatedAt
}

model Level {
  id   String   @id @default(uuid()) @db.Uuid
  name String
  rank Int
  users User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum InviteStatus {
  PENDING
  ACCEPTED
  REJECTED
}

enum Role {
  SUPERADMIN
  ADMIN
  USER
  MANAGER
  FACILITY
}
